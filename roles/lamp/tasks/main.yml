# Note:
#   - vhost: user defined configuration of the lamp server
#   - server: vhost combined with defaults values
#   We need to keep vhost as is in order to check which services
#   must be set up.

- name: platform specific
  block:
  - include_vars:
        file: '{{ ansible_distribution }}.yml'
        name: lamp
- set_fact:
    server: '{{ server_|combine(vhost, recursive=True) }}'

- include_tasks: '{{ task.file }}'
  when: task.when
  loop_control:
      loop_var: task
  with_items:
  # basic setup
  - file: '{{ ansible_distribution }}.yml'
    when: true

  # http
  - file: '{{ server.http.server }}.yml'
    when: '{{ server.http }}'

  # files
  - file: bundle.yml
    when: '{{ server.bundle and server.bundle.src|default(false) }}'
  - file: git.yml
    when: '{{ server.git and server.git.repo|default(false) }}'

  # http post install
  - file: '{{ server.http.server }}_post.yml'
    when: '{{ server.http }}'

  # database
  - file: sql.yml
    when: >
        vhost.sql is defined and
        server.sql.server in ['mysql', 'mariadb']

# certificates
- name: setup certificates
  block:
  - service:
        name: '{{ lamp.services[server.http.server] }}'
        state: stopped
  - shell: >
        certbot certonly -n
        -d {{ vhost.domain }} -m {{ vhost.admin_email }}
        --standalone --preferred-challenges http
        --agree-tos --dry-run
  when: server.cert


- name: restart services
  service: name='{{ item }}' state=restarted
  with_items:
      # user defining vhost.http does not implies server.http.server
      - '{% if vhost.http is defined %}{{ lamp.services[server.http.server] }}{% endif %}'
      - '{% if vhost.php is defined %}{{ lamp.services.php }}{% endif %}'
      # user defining vhost.sql does not implies server.sql.server
      - '{% if vhost.sql is defined %}{{ lamp.services[server.sql.server] }}{% endif %}'


